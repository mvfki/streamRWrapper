% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pyAttr2List.R
\name{pyAttr2List}
\alias{pyAttr2List}
\title{Extract attribute information of Python object to R list}
\usage{
pyAttr2List(py_object, silent = FALSE)
}
\arguments{
\item{py_object}{A Python object. Will be checked by whether
"python.builtin.object" is in `class(py_object)`. Otherwise, the object will
be returned untouched}

\item{silent}{Boolean, default FALSE. There can be some warning message from
Python side.}
}
\value{
attrList list
}
\description{
Only the value like attributes will be extracted rather than private
functions, constants or methods (i.e. name starts with '_' will be skipped).
Attributes that can be converted to R objects by "reticulate" will just be
done like this. Those that are still a Python objects will be replaced by
their `str(a)` representation (whether the information makes sense depends on
how the class was defined by the original developer).
}
\examples{
# In python 'testModule.py'
class testClass:
    def __init__(self, in1):
        self.attr1 = in1
        self.attr2 = [in1]
    def testFunc(self, in2):
        self.attr2.append(in2)
# In R
> library(reticulate)
> testModule <- import('testModule')
> obj <- testModule$testClass('hello')
> obj$testFunc('world')
> pyAttr2List(obj)
## $attr1
## [1] "hello"
##
## $attr2
## [1] "hello" "world"
}
